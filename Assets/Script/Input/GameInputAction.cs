//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Script/Input/GameInputAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameInputAction: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameInputAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInputAction"",
    ""maps"": [
        {
            ""name"": ""InputAction"",
            ""id"": ""e1b6f878-2805-46b8-8fc5-529839673544"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""2a9d6937-dc74-46a8-837c-ddc83011d1e1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraLook"",
                    ""type"": ""Value"",
                    ""id"": ""c66a9777-958b-4b83-95a0-dfd11e221ef2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LockUnLock"",
                    ""type"": ""Button"",
                    ""id"": ""f3079ed5-d2f8-4f53-9fe1-8b60cfab4041"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LAttack"",
                    ""type"": ""Button"",
                    ""id"": ""e2373489-1844-4c7e-b895-f21ffe1cb25a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RAttack"",
                    ""type"": ""Button"",
                    ""id"": ""9736daa4-0b74-499a-ab40-f2fb1c6e25dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Test"",
                    ""type"": ""Button"",
                    ""id"": ""6335d375-7921-41c3-8e51-9d75d466582d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""e092c71b-70bb-4df0-abce-6f341fc9c9c7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Finality"",
                    ""type"": ""Button"",
                    ""id"": ""44226173-546e-401f-9551-8712f53ea2b8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dodge"",
                    ""type"": ""Button"",
                    ""id"": ""bca98579-8daa-4472-af83-9f6b4a393feb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d8161dbf-e248-48db-8ee6-d6a5fafdc604"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""c91ed758-bdfd-4a28-b065-d5f7c2a63bc9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""34ccd283-c080-431f-a625-893974d69089"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5b3bdde9-8065-4e6e-a31a-91498ad68f8f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c6ccc0ea-8073-47c5-af75-33ed48bfb78b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0dbd5386-36a9-4759-a6c4-d70203374bd4"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""dc59b5f7-c4f8-4bf9-8594-32fcf3115aad"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LockUnLock"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a9e3c7c7-2dee-4008-890f-f52103e51291"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1994a8d-f673-4e66-9df4-08b5d56bbd07"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8731dbf0-9a67-491e-b1d9-3205e6aab1d2"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Test"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ea25c38-55a9-4747-9217-26c6fbbbe0a4"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9993bfba-e35e-4b61-b06e-990e606292ce"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a9d9da9f-7463-4ee0-b553-0f9527b3865a"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Finality"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8817eddb-aeb6-455e-9e63-d67dd64b3eb9"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // InputAction
        m_InputAction = asset.FindActionMap("InputAction", throwIfNotFound: true);
        m_InputAction_Movement = m_InputAction.FindAction("Movement", throwIfNotFound: true);
        m_InputAction_CameraLook = m_InputAction.FindAction("CameraLook", throwIfNotFound: true);
        m_InputAction_LockUnLock = m_InputAction.FindAction("LockUnLock", throwIfNotFound: true);
        m_InputAction_LAttack = m_InputAction.FindAction("LAttack", throwIfNotFound: true);
        m_InputAction_RAttack = m_InputAction.FindAction("RAttack", throwIfNotFound: true);
        m_InputAction_Test = m_InputAction.FindAction("Test", throwIfNotFound: true);
        m_InputAction_Run = m_InputAction.FindAction("Run", throwIfNotFound: true);
        m_InputAction_Finality = m_InputAction.FindAction("Finality", throwIfNotFound: true);
        m_InputAction_Dodge = m_InputAction.FindAction("Dodge", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // InputAction
    private readonly InputActionMap m_InputAction;
    private List<IInputActionActions> m_InputActionActionsCallbackInterfaces = new List<IInputActionActions>();
    private readonly InputAction m_InputAction_Movement;
    private readonly InputAction m_InputAction_CameraLook;
    private readonly InputAction m_InputAction_LockUnLock;
    private readonly InputAction m_InputAction_LAttack;
    private readonly InputAction m_InputAction_RAttack;
    private readonly InputAction m_InputAction_Test;
    private readonly InputAction m_InputAction_Run;
    private readonly InputAction m_InputAction_Finality;
    private readonly InputAction m_InputAction_Dodge;
    public struct InputActionActions
    {
        private @GameInputAction m_Wrapper;
        public InputActionActions(@GameInputAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_InputAction_Movement;
        public InputAction @CameraLook => m_Wrapper.m_InputAction_CameraLook;
        public InputAction @LockUnLock => m_Wrapper.m_InputAction_LockUnLock;
        public InputAction @LAttack => m_Wrapper.m_InputAction_LAttack;
        public InputAction @RAttack => m_Wrapper.m_InputAction_RAttack;
        public InputAction @Test => m_Wrapper.m_InputAction_Test;
        public InputAction @Run => m_Wrapper.m_InputAction_Run;
        public InputAction @Finality => m_Wrapper.m_InputAction_Finality;
        public InputAction @Dodge => m_Wrapper.m_InputAction_Dodge;
        public InputActionMap Get() { return m_Wrapper.m_InputAction; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InputActionActions set) { return set.Get(); }
        public void AddCallbacks(IInputActionActions instance)
        {
            if (instance == null || m_Wrapper.m_InputActionActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InputActionActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @CameraLook.started += instance.OnCameraLook;
            @CameraLook.performed += instance.OnCameraLook;
            @CameraLook.canceled += instance.OnCameraLook;
            @LockUnLock.started += instance.OnLockUnLock;
            @LockUnLock.performed += instance.OnLockUnLock;
            @LockUnLock.canceled += instance.OnLockUnLock;
            @LAttack.started += instance.OnLAttack;
            @LAttack.performed += instance.OnLAttack;
            @LAttack.canceled += instance.OnLAttack;
            @RAttack.started += instance.OnRAttack;
            @RAttack.performed += instance.OnRAttack;
            @RAttack.canceled += instance.OnRAttack;
            @Test.started += instance.OnTest;
            @Test.performed += instance.OnTest;
            @Test.canceled += instance.OnTest;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @Finality.started += instance.OnFinality;
            @Finality.performed += instance.OnFinality;
            @Finality.canceled += instance.OnFinality;
            @Dodge.started += instance.OnDodge;
            @Dodge.performed += instance.OnDodge;
            @Dodge.canceled += instance.OnDodge;
        }

        private void UnregisterCallbacks(IInputActionActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @CameraLook.started -= instance.OnCameraLook;
            @CameraLook.performed -= instance.OnCameraLook;
            @CameraLook.canceled -= instance.OnCameraLook;
            @LockUnLock.started -= instance.OnLockUnLock;
            @LockUnLock.performed -= instance.OnLockUnLock;
            @LockUnLock.canceled -= instance.OnLockUnLock;
            @LAttack.started -= instance.OnLAttack;
            @LAttack.performed -= instance.OnLAttack;
            @LAttack.canceled -= instance.OnLAttack;
            @RAttack.started -= instance.OnRAttack;
            @RAttack.performed -= instance.OnRAttack;
            @RAttack.canceled -= instance.OnRAttack;
            @Test.started -= instance.OnTest;
            @Test.performed -= instance.OnTest;
            @Test.canceled -= instance.OnTest;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @Finality.started -= instance.OnFinality;
            @Finality.performed -= instance.OnFinality;
            @Finality.canceled -= instance.OnFinality;
            @Dodge.started -= instance.OnDodge;
            @Dodge.performed -= instance.OnDodge;
            @Dodge.canceled -= instance.OnDodge;
        }

        public void RemoveCallbacks(IInputActionActions instance)
        {
            if (m_Wrapper.m_InputActionActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInputActionActions instance)
        {
            foreach (var item in m_Wrapper.m_InputActionActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InputActionActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InputActionActions @InputAction => new InputActionActions(this);
    public interface IInputActionActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnCameraLook(InputAction.CallbackContext context);
        void OnLockUnLock(InputAction.CallbackContext context);
        void OnLAttack(InputAction.CallbackContext context);
        void OnRAttack(InputAction.CallbackContext context);
        void OnTest(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnFinality(InputAction.CallbackContext context);
        void OnDodge(InputAction.CallbackContext context);
    }
}
